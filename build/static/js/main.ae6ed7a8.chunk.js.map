{"version":3,"sources":["hoc/withMUI.js","components/GameZone.js","containers/GameZone.js","App.js","serviceWorker.js","index.js"],"names":["theme","createMuiTheme","palette","primary","orange800","secondary","orange300","withMUI","Component","props","react_default","a","createElement","MuiThemeProvider_default","hand","width","display","justifyContent","GameZone","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleClickOpen","setState","open","handleClose","handleClick","value","val","console","log","state","chooseOwnHand","h1","currentValue","h2","h3","h4","ownHand","chooseOppHand","turn","mturn","lturn","_this2","classes","className","root","AppBar_default","position","color","Toolbar_default","Typography_default","variant","Card_default","card","CardContent_default","title","gutterBottom","style","padding","Grid_default","container","justify","alignItems","Avatar_default","alt","src","bigAvatar","component","Fab_default","aria-label","name","id","fab","onClick","e","preventDefault","Divider_default","Dialog_default","onClose","aria-labelledby","aria-describedby","DialogTitle_default","React","withStyles","flexGrow","minWidth","maxWidth","margin","bullet","transform","fontSize","pos","marginBottom","height","GameZoneContainer","components_GameZone","react_router_dom","react_router","path","render","containers_GameZone","Boolean","window","location","hostname","match","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ae6ed7a8.chunk.js","sourcesContent":["import React from \"react\";\nimport MuiThemeProvider from \"@material-ui/core/styles/MuiThemeProvider\";\nimport { createMuiTheme } from \"@material-ui/core/styles\";\nimport { orange800, orange300 } from \"@material-ui/core/colors\";\n\n// A theme with custom primary and secondary color.\n// It's optional.\nconst theme = createMuiTheme({\n  palette: {\n    primary: orange800,\n    secondary: orange300\n  }\n});\n\nfunction withMUI(Component) {\n  function WithMUI(props) {\n    // MuiThemeProvider makes the theme available down the React tree\n    // thanks to React context.\n    return (\n      <MuiThemeProvider theme={theme}>\n        {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n        <Component {...props} />\n      </MuiThemeProvider>\n    );\n  }\n\n  return WithMUI;\n}\n\nexport default withMUI;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Button from \"@material-ui/core/Button\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Fab from \"@material-ui/core/Fab\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\n\nconst styles = {\n  root: {\n    flexGrow: 1\n  },\n  card: {\n    minWidth: 275,\n    maxWidth: 600,\n    margin: \"50px\"\n  },\n  bullet: {\n    display: \"inline-block\",\n    margin: \"0 2px\",\n    transform: \"scale(0.8)\"\n  },\n  title: {\n    fontSize: 14\n  },\n  pos: {\n    marginBottom: 12\n  },\n  bigAvatar: {\n    margin: 10,\n    width: 60,\n    height: 60\n  },\n  fab: {\n    margin: \"8px\",\n    fontSize: \"20px\"\n  }\n};\n\nconst hand = { width: \"100%\", display: \"flex\", justifyContent: \"space-around\" };\n\nclass GameZone extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      turn: true,\n      mturn: true,\n      lturn: false,\n      chooseOwnHand: true,\n      ownHand: \"\",\n      currentValue: 0,\n      chooseOppHand: false,\n      h1: 1,\n      h2: 1,\n      h3: 1,\n      h4: 1,\n      open: false\n    };\n  }\n\n  handleClickOpen = () => {\n    this.setState({ open: true });\n  };\n\n  handleClose = () => {\n    this.setState({ open: false });\n  };\n\n  handleClick = value => {\n    console.log(value);\n    if (this.state.chooseOwnHand === true) {\n      let val;\n      if (value === \"h1\") {\n        val = this.state.h1;\n        this.setState({ currentValue: val });\n      }\n      if (value === \"h2\") {\n        val = this.state.h2;\n        this.setState({ currentValue: val });\n      }\n      if (value === \"h3\") {\n        val = this.state.h3;\n        this.setState({ currentValue: val });\n      }\n      if (value === \"h4\") {\n        val = this.state.h4;\n        this.setState({ currentValue: val });\n      }\n      this.setState(\n        { ownHand: value },\n        this.setState({ chooseOwnHand: false, chooseOppHand: true })\n      );\n    }\n    // Opponent hand\n    if (this.state.chooseOppHand === true) {\n      let val;\n      if (value === \"h1\") {\n        val = this.state.h1 + this.state.currentValue;\n        this.setState({ h1: val });\n      }\n      if (value === \"h2\") {\n        val = this.state.h2 + this.state.currentValue;\n        this.setState({ h2: val });\n      }\n      if (value === \"h3\") {\n        val = this.state.h3 + this.state.currentValue;\n        this.setState({ h3: val });\n      }\n      if (value === \"h4\") {\n        val = this.state.h4 + this.state.currentValue;\n        this.setState({ h4: val });\n      }\n      this.setState(\n        {\n          chooseOppHand: false,\n          turn: !this.state.turn,\n          chooseOwnHand: true\n        },\n        () => {\n          //Won Check\n          if (this.state.h1 === 5 && this.state.h2 === 5) {\n            this.handleClickOpen();\n          }\n          if (this.state.h3 === 5 && this.state.h4 === 5) {\n            this.handleClickOpen();\n          }\n        }\n      );\n    }\n  };\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <div>\n        {/* AppBar */}\n        <div className={classes.root}>\n          <AppBar position=\"static\" color=\"default\">\n            <Toolbar>\n              <Typography variant=\"h6\" color=\"inherit\">\n                Game Area\n              </Typography>\n            </Toolbar>\n          </AppBar>\n          {/* Card */}\n          <center>\n            <Card className={classes.card}>\n              <CardContent>\n                <Typography\n                  className={classes.title}\n                  color=\"textSecondary\"\n                  gutterBottom\n                >\n                  Welcome to Chop Sticks ! !\n                  {this.state.turn === true ? (\n                    <div>\n                      <div>Mario's turn</div>\n                      {/* <div>Choose your hand to strike Mario</div> */}\n                    </div>\n                  ) : (\n                    <div>\n                      <div>Luigi's turn</div>\n                      {/* <div>Choose your hand to strike Luigi</div> */}\n                    </div>\n                  )}\n                  {this.state.chooseOwnHand === true ? (\n                    <div>Choose your hand to strike</div>\n                  ) : (\n                    <div>Choose opponents hand to kill</div>\n                  )}\n                </Typography>\n                <div style={{ padding: \"40px\" }}>\n                  <div>\n                    <Grid container justify=\"center\" alignItems=\"center\">\n                      <Avatar\n                        alt=\"Remy Sharp\"\n                        src=\"https://static.giantbomb.com/uploads/square_medium/15/153607/3075875-mario.png\"\n                        className={classes.bigAvatar}\n                      />\n                    </Grid>\n                    <Typography variant=\"h5\" component=\"h2\">\n                      Mario\n                    </Typography>\n                    {/* <Typography className={classes.pos} color=\"textSecondary\">\n                      Turn\n                    </Typography> */}\n                    <div style={hand}>\n                      <div>\n                        <div>Right</div>\n                        <div>\n                          <Fab\n                            color=\"primary\"\n                            aria-label=\"Add\"\n                            name=\"h1\"\n                            id=\"hand1\"\n                            className={classes.fab}\n                            onClick={e => {\n                              e.preventDefault();\n                              this.handleClick(\"h1\");\n                            }}\n                          >\n                            {this.state.h1}\n                          </Fab>\n                        </div>\n                      </div>\n                      <div>\n                        <div>Left</div>\n                        <div>\n                          <Fab\n                            color=\"secondary\"\n                            aria-label=\"Add\"\n                            name=\"h2\"\n                            id=\"hand2\"\n                            className={classes.fab}\n                            onClick={e => {\n                              e.preventDefault();\n                              this.handleClick(\"h2\");\n                            }}\n                          >\n                            {this.state.h2}\n                          </Fab>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n\n                <Divider />\n\n                <div style={{ padding: \"40px\" }}>\n                  <div>\n                    <div style={hand}>\n                      <div>\n                        <div>Left</div>\n                        <div>\n                          <Fab\n                            color=\"secondary\"\n                            aria-label=\"Add\"\n                            name=\"h3\"\n                            id=\"hand3\"\n                            className={classes.fab}\n                            onClick={e => {\n                              e.preventDefault();\n                              this.handleClick(\"h3\");\n                            }}\n                          >\n                            {this.state.h3}\n                          </Fab>\n                        </div>\n                      </div>\n                      <div>\n                        <div>Right</div>\n                        <div>\n                          <Fab\n                            color=\"primary\"\n                            aria-label=\"Add\"\n                            name=\"h4\"\n                            id=\"hand4\"\n                            className={classes.fab}\n                            onClick={e => {\n                              e.preventDefault();\n                              this.handleClick(\"h4\");\n                            }}\n                          >\n                            {this.state.h4}\n                          </Fab>\n                        </div>\n                      </div>\n                    </div>\n                    <Grid container justify=\"center\" alignItems=\"center\">\n                      <Avatar\n                        alt=\"Remy Sharp\"\n                        src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQRMTyW_f3IeOe00Ko9exDVfn-44wN7WigcktASr7rejZKmvErO\"\n                        className={classes.bigAvatar}\n                      />\n                    </Grid>\n                    <Typography variant=\"h5\" component=\"h2\">\n                      Luigi\n                    </Typography>\n                    {/* <Typography className={classes.pos} color=\"textSecondary\">\n                      Turn\n                    </Typography> */}\n                  </div>\n                </div>\n              </CardContent>\n              {/* <CardActions>\n              <Button size=\"small\">Learn More</Button>\n            </CardActions> */}\n            </Card>\n          </center>\n        </div>\n        <Dialog\n          open={this.state.open}\n          onClose={this.handleClose}\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n        >\n          <DialogTitle id=\"alert-dialog-title\">\n            Congrats!!! You WON....\n            {this.state.turn === true ? <h3>Luigi</h3> : <h3>Mario</h3>}\n          </DialogTitle>\n        </Dialog>\n      </div>\n    );\n  }\n}\n\nGameZone.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(GameZone);\n","import React from \"react\";\nimport GameZone from \"../components/GameZone\";\n\nclass GameZoneContainer extends React.Component {\n  render() {\n    return (\n      <div>\n        <GameZone />\n      </div>\n    );\n  }\n}\n\nexport default GameZoneContainer;\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport withMUI from \"./hoc/withMUI\";\n// import withUser from \"./hoc/withUser\";\n// import withAuthentication from \"./hoc/withAuthentication\";\n// import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport GameZoneContainer from \"./containers/GameZone\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <Route path=\"/\" render={props => <GameZoneContainer {...props} />} />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default withMUI(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}